{"version":3,"sources":["components/Button.js","components/Header.js","components/Select.js","components/Filters.js","components/Countries.js","components/Country.js","App.js","reportWebVitals.js","index.js"],"names":["Button","label","onClick","value","iconClassName","className","Header","heading","toggleDarkMode","Select","onChange","Filters","search","onChangeSelect","type","placeholder","Countries","filtered","length","map","country","i","to","name","src","flag","alt","population","toLocaleString","region","capital","Country","countries","link","filter","b","borders","includes","alpha3Code","nativeName","subregion","topLevelDomain","currencies","code","languages","lang","join","App","useState","setcountries","setRegion","setSearch","darkmode","setDarkmode","handleChange","e","target","attr","parentNode","getAttribute","useEffect","axios","get","then","res","data","cou","toLowerCase","filteredByRegion","c","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fb26eba.chunk.js","sourcesContent":["\r\nconst Button = ({label, onClick, value, iconClassName}) => {\r\n  return (\r\n    <button className='button' onClick={onClick} value={value}>\r\n      <i className={iconClassName}></i>\r\n      {label}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\n\r\nconst Header = ({heading, toggleDarkMode}) => {\r\n  return (\r\n    <header className='header flex'>\r\n      <h1>{heading}</h1>\r\n      <Button \r\n        iconClassName=\"bi bi-moon-fill\" \r\n        onClick={toggleDarkMode} label='Dark Mode'/>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Select = ({onChange}) => {\r\n  return (\r\n  <select className='select-region' onChange={onChange}>\r\n    <option className=\"options\" value=\"\">All Countries</option>\r\n    <option className=\"options\" value=\"Africa\">Africa</option>\r\n    <option className=\"options\" value=\"Americas\">Americas</option>\r\n    <option className=\"options\" value=\"Asia\">Asia</option>\r\n    <option className=\"options\" value=\"Europe\">Europe</option>\r\n    <option className=\"options\" value=\"Oceania\">Oceania</option>\r\n  </select>\r\n  )\r\n}\r\n\r\nexport default Select;\r\n","import React from 'react';\r\nimport Select from './Select';\r\n\r\n\r\nconst Filters = ({onChange, search, onChangeSelect}) => {\r\n  return (\r\n    <div className=\"filters\">\r\n      <div className=\"search-input\">\r\n        <i className=\"bi bi-search\"></i>\r\n        <input type=\"text\" onChange={onChange} value={search} placeholder=\"Search for a country...\"/>\r\n      </div>\r\n      <Select onChange={onChangeSelect}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filters;\r\n","// import Button from \"./Button\";\r\nimport { Link } from 'react-router-dom';\r\n// import Select from \"./Select\";\r\nimport Filters from \"./Filters\";\r\n\r\nconst Countries = ({search, filtered, onClick, onChange, onChangeSelect}) => {\r\n\r\n  return (\r\n    <section className=\"countries flex\">\r\n      <Filters onChange={onChange} search={search} onChangeSelect={onChangeSelect} />\r\n      <div className=\"countries-container\">\r\n      { \r\n        filtered.length > 0 \r\n        ? filtered.map((country,i) => \r\n            <div className=\"country-card\" key={i}>\r\n              <Link to='/details'>\r\n                <div onClick={onClick} data-val={country.name} className=\"flag-image\">\r\n                  <img src={country.flag} alt=\"flag\"/>\r\n                </div>\r\n              </Link>\r\n              <div className=\"general-info\">\r\n                <h4>{country.name}</h4>\r\n                <div><span>Population:</span> {country.population.toLocaleString()}</div>\r\n                <div><span>Region:</span> {country.region}</div>\r\n                <div><span>Capital:</span> {country.capital}</div>\r\n              </div>\r\n          </div>)\r\n        : filtered.length === 0\r\n          ? <div className=\"loading\"></div>\r\n        : <div className=\"loading\"></div>\r\n      }\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Countries;\r\n// {search === '' \r\n// ? <p>Search for countries</p>\r\n// : filtered.length > 10 \r\n//   ? <p>too many countries</p>\r\n//   : filtered.length === 1 \r\n//   ? <div>\r\n//       <h1>{filtered[0].name}</h1> \r\n//       <p>Capital: {filtered[0].capital}</p>\r\n//       <p>Population: {filtered[0].population.toLocaleString()}</p>\r\n//       {/* <p>border countries: {filtered[0].borders.join(' ')}</p> */}\r\n//       <h2>Languages</h2>\r\n//         <ul>{filtered[0].languages.map((li, key) => <li key={key}>{li.name}</li>)}</ul>\r\n//       <img src={filtered[0].flag} alt=\"flag\" width='240px' height='150px'/>\r\n//     </div>\r\n//   : filtered.map((country,i) => \r\n//       <p key={i}>{country.name} \r\n//       <Button onClick={onClick} value={country.name} label='More details...'/>\r\n//       </p>)\r\n// }","import React from 'react';\r\nimport Button from './Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Country = ({filtered, onClick, countries, link}) => {\r\n\r\n  const bc = countries.filter(b => filtered[0].borders.includes(b.alpha3Code))\r\n\r\n  return (\r\n    <section className=\"details-view\">\r\n      <Link to='/'>\r\n        <Button iconClassName=\"bi bi-arrow-left\" onClick={onClick} label='Back'/>\r\n      </Link>\r\n      \r\n      <div className=\"details-container\">\r\n        <div className=\"big-flag-image\">\r\n          <img src={filtered[0].flag} alt=\"flag\"/>\r\n        </div>\r\n        <h2>{filtered[0].name}</h2>\r\n        <div className=\"details-box-1\">\r\n          <div><span>Native Name: </span>{filtered[0].nativeName}</div>\r\n          <div><span>Population: </span>{filtered[0].population.toLocaleString()}</div>\r\n          <div><span>Region: </span>{filtered[0].region}</div>\r\n          <div><span>Sub Region: </span>{filtered[0].subregion}</div>\r\n          <div><span>Capital: </span>{filtered[0].capital}</div>\r\n        </div>\r\n        <div className=\"details-box-2\">\r\n          <div><span>Top Level Domain: </span>{filtered[0].topLevelDomain}</div>\r\n          <div><span>Currencies: </span>{filtered[0].currencies[0].name} ({filtered[0].currencies[0].code})</div>\r\n          <div><span>Languages: </span>{filtered[0].languages.map(lang => lang.name).join(', ')}</div>\r\n          {/* <div>\r\n            {\r\n              bc.length > 0 \r\n              ? bc.map(borderCountry => (\r\n                <Link to='/details'>\r\n                  <div onClick={link} data-val={borderCountry.name}>\r\n                    {borderCountry.name}\r\n                  </div>\r\n                </Link>\r\n              ))\r\n              : <p>no borders</p>\r\n            }\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Country;\r\n","import './App.css';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Countries from './components/Countries';\nimport Country from './components/Country';\n\n\nconst App = () => {\n\n  const [countries, setcountries] = useState([])\n  const [region, setRegion] = useState('')\n  const [search, setSearch] = useState('')\n  const [darkmode, setDarkmode] = useState('')\n  \n  const handleChange = (e) => {\n    setSearch(e.target.value)\n  }\n\n  const link = (e) => {\n    const attr = e.target.parentNode.getAttribute(\"data-val\");\n    setSearch(attr);\n  }\n\n  const toggleDarkMode = () => {\n    darkmode === 'darkmode' ? setDarkmode('') : setDarkmode('darkmode');\n  }\n\n  useEffect(() => {\n    axios\n      .get('https://restcountries.eu/rest/v2/all')\n      .then(res => {\n        setcountries(res.data)\n      })\n  }, [])\n  \n  const filtered = \n    countries\n    .filter(cou => cou.name.toLowerCase().includes(search.toLowerCase()))\n  \n  const filteredByRegion = \n    countries\n    .filter(cou => cou.region === region)\n    .filter(c => c.name.toLowerCase().includes(search.toLowerCase()))\n\n  return (\n    <div className={`app flex__column ${darkmode}`}>\n      <Header heading='Where in the world?' darkmode={darkmode} toggleDarkMode={toggleDarkMode}/>\n           \n      <Router>\n        <Switch>\n          <Route\n            path='/' exact\n            render={() => (\n              <Countries \n                onChangeSelect={(e) => {setRegion(e.target.value)}}\n                onChange={handleChange}\n                // onClick={(e) => {setSearch(e.target.dataset.val)}}\n                onClick={link}\n                search={search}\n                filtered={region === '' ? filtered : filteredByRegion}\n              />\n            )}\n          />\n          {\n            filtered.length === 1\n            ? <Route \n                path='/details'\n                render={() => (\n                  <Country \n                    countries={countries}\n                    link={link}\n                    filtered={filtered}\n                    onClick={() => {setSearch(''); setRegion('')}}\n                  />\n                )}\n                />            \n            : <h1>Error 404</h1>\n          }\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n//     <div className=\"App\">\n//       <Switch>\n//         {/* <Route path='/' exact component={Home}/> */}\n//         <Route path='/country' component={Country}/>\n//       </Switch>\n\n//     </div>\n\n// function App() {\n  //   return (\n//    /* everything inside Router is going to have the ability to use routing */\n//     <Router>\n//         <div className=\"App\">\n//           <header className=\"App-header\">\n//             <Switch>\n//               <Route path='/' exact component={Home}/>\n//               <Route path='/country' component={Country}/>\n//             </Switch>\n//             <Link to='/country'>\n//               <button>Go to country</button>\n//             </Link>\n//           </header>\n//         </div>\n//     </Router>\n//   );\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}